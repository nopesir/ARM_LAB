


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004         
  120 00000004 00000018 
                       myArea_size
                               EQU              0x00000018
  121 00000004         
  122 00000004                 AREA             myArea, NOINIT, READWRITE
  123 00000000         myArea_mem



ARM Macro Assembler    Page 4 


                               SPACE            myArea_size
  124 00000018         myArea_p
  125 00000018         
  126 00000018         
  127 00000018 00000003 
                       N       EQU              0x00000003
  128 00000018 00000009 
                       N_sq    EQU              0x00000009
  129 00000018         
  130 00000018                 AREA             myVec, READWRITE
  131 00000000 00 00 00 
              00 00 00 
              00 00 00 myVec_mem
                               SPACE            N_sq
  132 00000009         myVec_p
  133 00000009         
  134 00000009         
  135 00000009         
  136 00000009         
  137 00000009         
  138 00000009                 AREA             |.text|, CODE, READONLY
  139 00000000         
  140 00000000         
  141 00000000         ; Reset Handler
  142 00000000         
  143 00000000         Reset_Handler
                               PROC
  144 00000000                 EXPORT           Reset_Handler             [WEAK
]
  145 00000000         
  146 00000000 4895            LDR              r0, =0x7A30458D
  147 00000002 4996            LDR              r1, =0xC3159EAA
  148 00000004         
  149 00000004         ; Ex1
  150 00000004         ;BL myUADD8    
  151 00000004         
  152 00000004         ; Ex2
  153 00000004         ;LDR r6, =myArea_p
  154 00000004         ;STMIA r6, {r0, r1}
  155 00000004         ;BL myUSAD8
  156 00000004         ;LDR r5, [r6]
  157 00000004         
  158 00000004         ; Ex3A
  159 00000004         ;PUSH {r0,r1,r6}
  160 00000004         ;BL mySMUAD
  161 00000004         ;POP {r0,r1,r6}
  162 00000004         
  163 00000004         
  164 00000004         ; Ex3B
  165 00000004         ;PUSH {r0,r1,r7}
  166 00000004         ;BL mySMUSD
  167 00000004         ;POP {r0,r1,r7}
  168 00000004         
  169 00000004         ; Ex4
  170 00000004 4896            LDR              r0, =matrix
  171 00000006 F04F 0103       LDR              r1, =N
  172 0000000A         
  173 0000000A B407            PUSH             {r0-r2}
  174 0000000C F7FF FFFE       BL               magicSquare



ARM Macro Assembler    Page 5 


  175 00000010 BC07            POP              {r0-r2}
  176 00000012         
  177 00000012 E7FE    stop    B                stop
  178 00000014         
  179 00000014 04 09 02 
              03 05 07 
              08 01 06 matrix  DCB              4,9,2,3,5,7,8,1,6
  180 0000001D         
  181 0000001D                 ENDP
  182 0000001D         
  183 0000001D         
  184 0000001D         
  185 0000001D         
  186 0000001D         myUADD8 PROC
  187 0000001D 00 B503         PUSH             {r0,r1,LR}
  188 00000020 EA4F 6210       LSR              r2, r0, #24
  189 00000024 EA4F 6311       LSR              r3, r1, #24
  190 00000028         
  191 00000028 EB02 0503       ADD              r5, r2, r3
  192 0000002C         
  193 0000002C EA4F 6505       LSL              r5, r5, #24
  194 00000030 EA4F 6515       LSR              r5, r5, #24
  195 00000034         
  196 00000034 EA4F 2404       LSL              r4, r4, #8
  197 00000038 442C            ADD              r4, r4, r5
  198 0000003A         
  199 0000003A EA4F 4210       LSR              r2, r0, #16
  200 0000003E EA4F 6202       LSL              r2, r2, #24
  201 00000042 EA4F 6212       LSR              r2, r2, #24
  202 00000046 EA4F 4311       LSR              r3, r1, #16
  203 0000004A EA4F 6303       LSL              r3, r3, #24
  204 0000004E EA4F 6313       LSR              r3, r3, #24
  205 00000052         
  206 00000052 EB02 0503       ADD              r5, r2, r3
  207 00000056         
  208 00000056 EA4F 6505       LSL              r5, r5, #24
  209 0000005A EA4F 6515       LSR              r5, r5, #24
  210 0000005E         
  211 0000005E EA4F 2404       LSL              r4, r4, #8
  212 00000062 442C            ADD              r4, r4, r5
  213 00000064         
  214 00000064 EA4F 2210       LSR              r2, r0, #8
  215 00000068 EA4F 6202       LSL              r2, r2, #24
  216 0000006C EA4F 6212       LSR              r2, r2, #24
  217 00000070 EA4F 2311       LSR              r3, r1, #8
  218 00000074 EA4F 6303       LSL              r3, r3, #24
  219 00000078 EA4F 6313       LSR              r3, r3, #24
  220 0000007C         
  221 0000007C EB02 0503       ADD              r5, r2, r3
  222 00000080         
  223 00000080 EA4F 6505       LSL              r5, r5, #24
  224 00000084 EA4F 6515       LSR              r5, r5, #24
  225 00000088         
  226 00000088 EA4F 2404       LSL              r4, r4, #8
  227 0000008C 442C            ADD              r4, r4, r5
  228 0000008E         
  229 0000008E 4602            MOV              r2, r0
  230 00000090 EA4F 6202       LSL              r2, r2, #24
  231 00000094 EA4F 6212       LSR              r2, r2, #24



ARM Macro Assembler    Page 6 


  232 00000098 460B            MOV              r3, r1
  233 0000009A EA4F 6303       LSL              r3, r3, #24
  234 0000009E EA4F 6313       LSR              r3, r3, #24
  235 000000A2         
  236 000000A2 EB02 0503       ADD              r5, r2, r3
  237 000000A6         
  238 000000A6 EA4F 6505       LSL              r5, r5, #24
  239 000000AA EA4F 6515       LSR              r5, r5, #24
  240 000000AE         
  241 000000AE EA4F 2404       LSL              r4, r4, #8
  242 000000B2 442C            ADD              r4, r4, r5
  243 000000B4         
  244 000000B4 BD03            POP              {r0,r1,PC}
  245 000000B6         
  246 000000B6                 ENDP
  247 000000B6         
  248 000000B6         
  249 000000B6         myUSAD8 PROC
  250 000000B6         
  251 000000B6 B57F            PUSH             {r0-r6,LR}
  252 000000B8         
  253 000000B8 E896 0003       LDMIA            r6, {r0,r1}
  254 000000BC         
  255 000000BC F04F 0400       MOV              r4, #0
  256 000000C0         
  257 000000C0 EA4F 6210       LSR              r2, r0, #24
  258 000000C4 EA4F 6311       LSR              r3, r1, #24
  259 000000C8         
  260 000000C8 1AD5            SUBS             r5, r2, r3  ; Caculate the abso
                                                            lute 
  261 000000CA BF48 426D       NEGMI            r5, r5      ; value of the sub
  262 000000CE         
  263 000000CE 442C            ADD              r4, r4, r5
  264 000000D0         
  265 000000D0 EA4F 4210       LSR              r2, r0, #16
  266 000000D4 EA4F 6202       LSL              r2, r2, #24
  267 000000D8 EA4F 6212       LSR              r2, r2, #24
  268 000000DC EA4F 4311       LSR              r3, r1, #16
  269 000000E0 EA4F 6303       LSL              r3, r3, #24
  270 000000E4 EA4F 6313       LSR              r3, r3, #24
  271 000000E8         
  272 000000E8 1AD5            SUBS             r5, r2, r3  ; Caculate the abso
                                                            lute 
  273 000000EA BF48 426D       NEGMI            r5, r5      ; value of the sub
  274 000000EE         
  275 000000EE EA4F 6505       LSL              r5, r5, #24
  276 000000F2 EA4F 6515       LSR              r5, r5, #24
  277 000000F6         
  278 000000F6 442C            ADD              r4, r4, r5
  279 000000F8         
  280 000000F8 EA4F 2210       LSR              r2, r0, #8
  281 000000FC EA4F 6202       LSL              r2, r2, #24
  282 00000100 EA4F 6212       LSR              r2, r2, #24
  283 00000104 EA4F 2311       LSR              r3, r1, #8
  284 00000108 EA4F 6303       LSL              r3, r3, #24
  285 0000010C EA4F 6313       LSR              r3, r3, #24
  286 00000110         
  287 00000110 1AD5            SUBS             r5, r2, r3  ; Caculate the abso
                                                            lute 



ARM Macro Assembler    Page 7 


  288 00000112 BF48 426D       NEGMI            r5, r5      ; value of the sub
  289 00000116         
  290 00000116 EA4F 6505       LSL              r5, r5, #24
  291 0000011A EA4F 6515       LSR              r5, r5, #24
  292 0000011E         
  293 0000011E 442C            ADD              r4, r4, r5
  294 00000120         
  295 00000120 4602            MOV              r2, r0
  296 00000122 EA4F 6202       LSL              r2, r2, #24
  297 00000126 EA4F 6212       LSR              r2, r2, #24
  298 0000012A 460B            MOV              r3, r1
  299 0000012C EA4F 6303       LSL              r3, r3, #24
  300 00000130 EA4F 6313       LSR              r3, r3, #24
  301 00000134         
  302 00000134 1AD5            SUBS             r5, r2, r3  ; Caculate the abso
                                                            lute 
  303 00000136 BF48 426D       NEGMI            r5, r5      ; value of the sub
  304 0000013A         
  305 0000013A EA4F 6505       LSL              r5, r5, #24
  306 0000013E EA4F 6515       LSR              r5, r5, #24
  307 00000142         
  308 00000142 442C            ADD              r4, r4, r5
  309 00000144         
  310 00000144 6034            STMIA            r6, {r4}
  311 00000146         
  312 00000146 BD7F            POP              {r0-r6,PC}
  313 00000148         
  314 00000148                 ENDP
  315 00000148         
  316 00000148         
  317 00000148         mySMUAD PROC
  318 00000148         
  319 00000148 E92D 43FF       PUSH{r0-r9,LR}
  320 0000014C 980B            LDR              r0, [sp, #44]
  321 0000014E 990C            LDR              r1, [sp, #48]
  322 00000150         
  323 00000150 F04F 0700       MOV              r7, #0      ; INIT to 0
  324 00000154         
  325 00000154 EA4F 4220       ASR              r2, r0, #16 ; Shift arithmetica
                                                            lly right and save 
                                                            in OpB
  326 00000158 EA4F 4000       MOV              r0, r0, LSL #16 ; Shift logical
                                                            ly left
  327 0000015C EA4F 4020       MOV              r0, r0, ASR #16 ; and then arit
                                                            hmetically right 
  328 00000160         ; to take the first MSB halfword
  329 00000160         
  330 00000160 EA4F 4321       ASR              r3, r1, #16 ; Do the same with 
                                                            OpD and OpC
  331 00000164 EA4F 4101       MOV              r1, r1, LSL #16
  332 00000168 EA4F 4121       MOV              r1, r1, ASR #16
  333 0000016C         
  334 0000016C FB00 F401       MUL              r4, r0, r1  ; Multiply the firs
                                                            t pair of halfword
  335 00000170 FB02 F503       MUL              r5, r2, r3  ; and the second on
                                                            e
  336 00000174         
  337 00000174         
  338 00000174 4426            ADD              r6, r6, r4



ARM Macro Assembler    Page 8 


  339 00000176 442E            ADD              r6, r6, r5
  340 00000178         
  341 00000178 960D            STR              r6, [sp, #52]
  342 0000017A         
  343 0000017A E8BD 83FF       POP{r0-r9,PC}
  344 0000017E         
  345 0000017E                 ENDP
  346 0000017E         
  347 0000017E         mySMUSD PROC
  348 0000017E         
  349 0000017E E92D 43FF       PUSH{r0-r9,LR}
  350 00000182 980B            LDR              r0, [sp, #44]
  351 00000184 990C            LDR              r1, [sp, #48]
  352 00000186         
  353 00000186 F04F 0700       MOV              r7, #0      ; INIT to 0
  354 0000018A         
  355 0000018A EA4F 4220       ASR              r2, r0, #16 ; Shift arithmetica
                                                            lly right and save 
                                                            in OpB
  356 0000018E EA4F 4000       MOV              r0, r0, LSL #16 ; Shift logical
                                                            ly left
  357 00000192 EA4F 4020       MOV              r0, r0, ASR #16 ; and then arit
                                                            hmetically right 
  358 00000196         ; to take the first MSB halfword
  359 00000196         
  360 00000196 EA4F 4321       ASR              r3, r1, #16 ; Do the same with 
                                                            OpD and OpC
  361 0000019A EA4F 4101       MOV              r1, r1, LSL #16
  362 0000019E EA4F 4121       MOV              r1, r1, ASR #16
  363 000001A2         
  364 000001A2 FB00 F401       MUL              r4, r0, r1  ; Multiply the firs
                                                            t pair of halfword
  365 000001A6 FB02 F503       MUL              r5, r2, r3  ; and the second on
                                                            e
  366 000001AA         
  367 000001AA         
  368 000001AA 4426            ADD              r6, r6, r4
  369 000001AC EBA6 0605       SUB              r6, r6, r5
  370 000001B0         
  371 000001B0 960D            STR              r6, [sp, #52]
  372 000001B2         
  373 000001B2 E8BD 83FF       POP{r0-r9,PC}
  374 000001B6         
  375 000001B6                 ENDP
  376 000001B6         
  377 000001B6         
  378 000001B6         magicSquare
                               PROC
  379 000001B6         
  380 000001B6 E92D 5FFF       PUSH             {r0-r12, LR}
  381 000001BA F04F 0201       MOV              r2, #1
  382 000001BE 980E            LDR              r0, [sp, #56]
  383 000001C0 990F            LDR              r1, [sp, #60]
  384 000001C2 FB01 F101       MUL              r1, r1, r1
  385 000001C6 4B27            LDR              r3, =myVec_p
  386 000001C8         
  387 000001C8         loop_one
  388 000001C8 F1A1 0101       SUB              r1, r1, #1
  389 000001CC F810 4B01       LDRB             r4, [r0], #1



ARM Macro Assembler    Page 9 


  390 000001D0 F1A4 0401       SUB              r4, r4, #1
  391 000001D4 551A            STRB             r2, [r3, r4]
  392 000001D6 2900            CMP              r1, #0
  393 000001D8 D1F6            BNE              loop_one
  394 000001DA         
  395 000001DA 980E            LDR              r0, [sp, #56]
  396 000001DC 990F            LDR              r1, [sp, #60]
  397 000001DE FB01 F101       MUL              r1, r1, r1
  398 000001E2 F04F 0400       MOV              r4, #0
  399 000001E6         
  400 000001E6         loop_two
  401 000001E6 F1A1 0101       SUB              r1, r1, #1
  402 000001EA F813 2B01       LDRB             r2, [r3], #1
  403 000001EE 4414            ADD              r4, r4, r2
  404 000001F0 2900            CMP              r1, #0
  405 000001F2 D1F8            BNE              loop_two
  406 000001F4         
  407 000001F4 980E            LDR              r0, [sp, #56]
  408 000001F6 990F            LDR              r1, [sp, #60]
  409 000001F8 FB01 F101       MUL              r1, r1, r1
  410 000001FC 460D            MOV              r5, r1
  411 000001FE         
  412 000001FE 428C            CMP              r4, r1
  413 00000200 D10F            BNE              end_bad
  414 00000202         
  415 00000202 4B18            LDR              r3, =myVec_p
  416 00000204         
  417 00000204         loop_three
  418 00000204 F1A1 0101       SUB              r1, r1, #1
  419 00000208 F813 2B01       LDRB             r2, [r3], #1
  420 0000020C 42AA            CMP              r2, r5
  421 0000020E DC08            BGT              end_bad
  422 00000210 2A01            CMP              r2, #1
  423 00000212 DB06            BLT              end_bad
  424 00000214 2900            CMP              r1, #0
  425 00000216 D1F5            BNE              loop_three
  426 00000218         
  427 00000218 980E            LDR              r0, [sp, #56]
  428 0000021A 990F            LDR              r1, [sp, #60]
  429 0000021C FB01 F101       MUL              r1, r1, r1
  430 00000220 E004            B                end_good
  431 00000222         
  432 00000222         
  433 00000222         ; To finish the last check on magic number
  434 00000222         
  435 00000222         
  436 00000222         
  437 00000222         
  438 00000222         end_bad
  439 00000222 F04F 0C00       MOV              r12, #0
  440 00000226 F8CD C040       STR              r12, [sp, #64]
  441 0000022A E003            B                end_end
  442 0000022C         
  443 0000022C         end_good
  444 0000022C F04F 0C01       MOV              r12, #1
  445 00000230 F8CD C040       STR              r12, [sp, #64]
  446 00000234         
  447 00000234         end_end
  448 00000234 E8BD 9FFF       POP              {r0-r12, PC}



ARM Macro Assembler    Page 10 


  449 00000238         
  450 00000238                 ENDP
  451 00000238         
  452 00000238         
  453 00000238         
  454 00000238         
  455 00000238         
  456 00000238         
  457 00000238         
  458 00000238         
  459 00000238         
  460 00000238         
  461 00000238         
  462 00000238         
  463 00000238         
  464 00000238         
  465 00000238         
  466 00000238         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  467 00000238         
  468 00000238         NMI_Handler
                               PROC
  469 00000238                 EXPORT           NMI_Handler               [WEAK
]
  470 00000238 E7FE            B                .
  471 0000023A                 ENDP
  473 0000023A         HardFault_Handler
                               PROC
  474 0000023A                 EXPORT           HardFault_Handler         [WEAK
]
  475 0000023A E7FE            B                .
  476 0000023C                 ENDP
  478 0000023C         MemManage_Handler
                               PROC
  479 0000023C                 EXPORT           MemManage_Handler         [WEAK
]
  480 0000023C E7FE            B                .
  481 0000023E                 ENDP
  483 0000023E         BusFault_Handler
                               PROC
  484 0000023E                 EXPORT           BusFault_Handler          [WEAK
]
  485 0000023E E7FE            B                .
  486 00000240                 ENDP
  488 00000240         UsageFault_Handler
                               PROC
  489 00000240                 EXPORT           UsageFault_Handler        [WEAK
]
  490 00000240 E7FE            B                .
  491 00000242                 ENDP
  492 00000242         SVC_Handler
                               PROC
  493 00000242                 EXPORT           SVC_Handler               [WEAK
]
  494 00000242 E7FE            B                .
  495 00000244                 ENDP
  497 00000244         DebugMon_Handler
                               PROC
  498 00000244                 EXPORT           DebugMon_Handler          [WEAK



ARM Macro Assembler    Page 11 


]
  499 00000244 E7FE            B                .
  500 00000246                 ENDP
  501 00000246         PendSV_Handler
                               PROC
  502 00000246                 EXPORT           PendSV_Handler            [WEAK
]
  503 00000246 E7FE            B                .
  504 00000248                 ENDP
  505 00000248         SysTick_Handler
                               PROC
  506 00000248                 EXPORT           SysTick_Handler           [WEAK
]
  507 00000248 E7FE            B                .
  508 0000024A                 ENDP
  509 0000024A         
  510 0000024A         Default_Handler
                               PROC
  511 0000024A         
  512 0000024A                 EXPORT           WDT_IRQHandler            [WEAK
]
  513 0000024A                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  514 0000024A                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  515 0000024A                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  516 0000024A                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  517 0000024A                 EXPORT           UART0_IRQHandler          [WEAK
]
  518 0000024A                 EXPORT           UART1_IRQHandler          [WEAK
]
  519 0000024A                 EXPORT           UART2_IRQHandler          [WEAK
]
  520 0000024A                 EXPORT           UART3_IRQHandler          [WEAK
]
  521 0000024A                 EXPORT           PWM1_IRQHandler           [WEAK
]
  522 0000024A                 EXPORT           I2C0_IRQHandler           [WEAK
]
  523 0000024A                 EXPORT           I2C1_IRQHandler           [WEAK
]
  524 0000024A                 EXPORT           I2C2_IRQHandler           [WEAK
]
  525 0000024A                 EXPORT           SPI_IRQHandler            [WEAK
]
  526 0000024A                 EXPORT           SSP0_IRQHandler           [WEAK
]
  527 0000024A                 EXPORT           SSP1_IRQHandler           [WEAK
]
  528 0000024A                 EXPORT           PLL0_IRQHandler           [WEAK
]
  529 0000024A                 EXPORT           RTC_IRQHandler            [WEAK
]
  530 0000024A                 EXPORT           EINT0_IRQHandler          [WEAK
]
  531 0000024A                 EXPORT           EINT1_IRQHandler          [WEAK
]



ARM Macro Assembler    Page 12 


  532 0000024A                 EXPORT           EINT2_IRQHandler          [WEAK
]
  533 0000024A                 EXPORT           EINT3_IRQHandler          [WEAK
]
  534 0000024A                 EXPORT           ADC_IRQHandler            [WEAK
]
  535 0000024A                 EXPORT           BOD_IRQHandler            [WEAK
]
  536 0000024A                 EXPORT           USB_IRQHandler            [WEAK
]
  537 0000024A                 EXPORT           CAN_IRQHandler            [WEAK
]
  538 0000024A                 EXPORT           DMA_IRQHandler            [WEAK
]
  539 0000024A                 EXPORT           I2S_IRQHandler            [WEAK
]
  540 0000024A                 EXPORT           ENET_IRQHandler           [WEAK
]
  541 0000024A                 EXPORT           RIT_IRQHandler            [WEAK
]
  542 0000024A                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  543 0000024A                 EXPORT           QEI_IRQHandler            [WEAK
]
  544 0000024A                 EXPORT           PLL1_IRQHandler           [WEAK
]
  545 0000024A                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  546 0000024A                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  547 0000024A         
  548 0000024A         WDT_IRQHandler
  549 0000024A         TIMER0_IRQHandler
  550 0000024A         TIMER1_IRQHandler
  551 0000024A         TIMER2_IRQHandler
  552 0000024A         TIMER3_IRQHandler
  553 0000024A         UART0_IRQHandler
  554 0000024A         UART1_IRQHandler
  555 0000024A         UART2_IRQHandler
  556 0000024A         UART3_IRQHandler
  557 0000024A         PWM1_IRQHandler
  558 0000024A         I2C0_IRQHandler
  559 0000024A         I2C1_IRQHandler
  560 0000024A         I2C2_IRQHandler
  561 0000024A         SPI_IRQHandler
  562 0000024A         SSP0_IRQHandler
  563 0000024A         SSP1_IRQHandler
  564 0000024A         PLL0_IRQHandler
  565 0000024A         RTC_IRQHandler
  566 0000024A         EINT0_IRQHandler
  567 0000024A         EINT1_IRQHandler
  568 0000024A         EINT2_IRQHandler
  569 0000024A         EINT3_IRQHandler
  570 0000024A         ADC_IRQHandler
  571 0000024A         BOD_IRQHandler
  572 0000024A         USB_IRQHandler
  573 0000024A         CAN_IRQHandler
  574 0000024A         DMA_IRQHandler
  575 0000024A         I2S_IRQHandler



ARM Macro Assembler    Page 13 


  576 0000024A         ENET_IRQHandler
  577 0000024A         RIT_IRQHandler
  578 0000024A         MCPWM_IRQHandler
  579 0000024A         QEI_IRQHandler
  580 0000024A         PLL1_IRQHandler
  581 0000024A         USBActivity_IRQHandler
  582 0000024A         CANActivity_IRQHandler
  583 0000024A         
  584 0000024A E7FE            B                .
  585 0000024C         
  586 0000024C                 ENDP
  587 0000024C         
  588 0000024C         
  589 0000024C                 ALIGN
  590 0000024C         
  591 0000024C         
  592 0000024C         ; User Initial Stack & Heap
  593 0000024C         
  594 0000024C                 IF               :DEF:__MICROLIB
  601 0000024C         
  602 0000024C         ;IMPORT  __use_two_region_memory
  603 0000024C                 EXPORT           __user_initial_stackheap
  604 0000024C         __user_initial_stackheap
  605 0000024C         
  606 0000024C 4806            LDR              R0, =  Heap_Mem
  607 0000024E 4907            LDR              R1, =(Stack_Mem + Stack_Size)
  608 00000250 4A05            LDR              R2, = (Heap_Mem +  Heap_Size)
  609 00000252 4B07            LDR              R3, = Stack_Mem
  610 00000254 4770            BX               LR
  611 00000256         
  612 00000256 00 00           ALIGN
  613 00000258         
  614 00000258                 ENDIF
  615 00000258         
  616 00000258         
  617 00000258                 END
              7A30458D 
              C3159EAA 
              00000000 
              00000000 
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\startu
p_lpc17xx.d -o.\startup_lpc17xx.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\In
clude -IC:\Keil\ARM\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=.\startu
p_lpc17xx.lst startup_LPC17xx.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file startup_LPC17xx.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file startup_LPC17xx.s
   Uses
      At line 607 in file startup_LPC17xx.s
      At line 609 in file startup_LPC17xx.s

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file startup_LPC17xx.s
   Uses
      At line 59 in file startup_LPC17xx.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file startup_LPC17xx.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file startup_LPC17xx.s
   Uses
      At line 606 in file startup_LPC17xx.s
      At line 608 in file startup_LPC17xx.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file startup_LPC17xx.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file startup_LPC17xx.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file startup_LPC17xx.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file startup_LPC17xx.s
   Uses
      At line 57 in file startup_LPC17xx.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file startup_LPC17xx.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file startup_LPC17xx.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

myArea 00000000

Symbol: myArea
   Definitions
      At line 122 in file startup_LPC17xx.s
   Uses
      None
Comment: myArea unused
myArea_mem 00000000

Symbol: myArea_mem
   Definitions
      At line 123 in file startup_LPC17xx.s
   Uses
      None
Comment: myArea_mem unused
myArea_p 00000018

Symbol: myArea_p
   Definitions
      At line 124 in file startup_LPC17xx.s
   Uses
      None
Comment: myArea_p unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

myVec 00000000

Symbol: myVec
   Definitions
      At line 130 in file startup_LPC17xx.s
   Uses
      None
Comment: myVec unused
myVec_mem 00000000

Symbol: myVec_mem
   Definitions
      At line 131 in file startup_LPC17xx.s
   Uses
      None
Comment: myVec_mem unused
myVec_p 00000009

Symbol: myVec_p
   Definitions
      At line 132 in file startup_LPC17xx.s
   Uses
      At line 385 in file startup_LPC17xx.s
      At line 415 in file startup_LPC17xx.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 138 in file startup_LPC17xx.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 0000024A

Symbol: ADC_IRQHandler
   Definitions
      At line 570 in file startup_LPC17xx.s
   Uses
      At line 99 in file startup_LPC17xx.s
      At line 534 in file startup_LPC17xx.s

BOD_IRQHandler 0000024A

Symbol: BOD_IRQHandler
   Definitions
      At line 571 in file startup_LPC17xx.s
   Uses
      At line 100 in file startup_LPC17xx.s
      At line 535 in file startup_LPC17xx.s

BusFault_Handler 0000023E

Symbol: BusFault_Handler
   Definitions
      At line 483 in file startup_LPC17xx.s
   Uses
      At line 64 in file startup_LPC17xx.s
      At line 484 in file startup_LPC17xx.s

CANActivity_IRQHandler 0000024A

Symbol: CANActivity_IRQHandler
   Definitions
      At line 582 in file startup_LPC17xx.s
   Uses
      At line 111 in file startup_LPC17xx.s
      At line 546 in file startup_LPC17xx.s

CAN_IRQHandler 0000024A

Symbol: CAN_IRQHandler
   Definitions
      At line 573 in file startup_LPC17xx.s
   Uses
      At line 102 in file startup_LPC17xx.s
      At line 537 in file startup_LPC17xx.s

DMA_IRQHandler 0000024A

Symbol: DMA_IRQHandler
   Definitions
      At line 574 in file startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 103 in file startup_LPC17xx.s
      At line 538 in file startup_LPC17xx.s

DebugMon_Handler 00000244

Symbol: DebugMon_Handler
   Definitions
      At line 497 in file startup_LPC17xx.s
   Uses
      At line 71 in file startup_LPC17xx.s
      At line 498 in file startup_LPC17xx.s

Default_Handler 0000024A

Symbol: Default_Handler
   Definitions
      At line 510 in file startup_LPC17xx.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 0000024A

Symbol: EINT0_IRQHandler
   Definitions
      At line 566 in file startup_LPC17xx.s
   Uses
      At line 95 in file startup_LPC17xx.s
      At line 530 in file startup_LPC17xx.s

EINT1_IRQHandler 0000024A

Symbol: EINT1_IRQHandler
   Definitions
      At line 567 in file startup_LPC17xx.s
   Uses
      At line 96 in file startup_LPC17xx.s
      At line 531 in file startup_LPC17xx.s

EINT2_IRQHandler 0000024A

Symbol: EINT2_IRQHandler
   Definitions
      At line 568 in file startup_LPC17xx.s
   Uses
      At line 97 in file startup_LPC17xx.s
      At line 532 in file startup_LPC17xx.s

EINT3_IRQHandler 0000024A

Symbol: EINT3_IRQHandler
   Definitions
      At line 569 in file startup_LPC17xx.s
   Uses
      At line 98 in file startup_LPC17xx.s
      At line 533 in file startup_LPC17xx.s

ENET_IRQHandler 0000024A

Symbol: ENET_IRQHandler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 576 in file startup_LPC17xx.s
   Uses
      At line 105 in file startup_LPC17xx.s
      At line 540 in file startup_LPC17xx.s

HardFault_Handler 0000023A

Symbol: HardFault_Handler
   Definitions
      At line 473 in file startup_LPC17xx.s
   Uses
      At line 62 in file startup_LPC17xx.s
      At line 474 in file startup_LPC17xx.s

I2C0_IRQHandler 0000024A

Symbol: I2C0_IRQHandler
   Definitions
      At line 558 in file startup_LPC17xx.s
   Uses
      At line 87 in file startup_LPC17xx.s
      At line 522 in file startup_LPC17xx.s

I2C1_IRQHandler 0000024A

Symbol: I2C1_IRQHandler
   Definitions
      At line 559 in file startup_LPC17xx.s
   Uses
      At line 88 in file startup_LPC17xx.s
      At line 523 in file startup_LPC17xx.s

I2C2_IRQHandler 0000024A

Symbol: I2C2_IRQHandler
   Definitions
      At line 560 in file startup_LPC17xx.s
   Uses
      At line 89 in file startup_LPC17xx.s
      At line 524 in file startup_LPC17xx.s

I2S_IRQHandler 0000024A

Symbol: I2S_IRQHandler
   Definitions
      At line 575 in file startup_LPC17xx.s
   Uses
      At line 104 in file startup_LPC17xx.s
      At line 539 in file startup_LPC17xx.s

MCPWM_IRQHandler 0000024A

Symbol: MCPWM_IRQHandler
   Definitions
      At line 578 in file startup_LPC17xx.s
   Uses
      At line 107 in file startup_LPC17xx.s
      At line 542 in file startup_LPC17xx.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


MemManage_Handler 0000023C

Symbol: MemManage_Handler
   Definitions
      At line 478 in file startup_LPC17xx.s
   Uses
      At line 63 in file startup_LPC17xx.s
      At line 479 in file startup_LPC17xx.s

NMI_Handler 00000238

Symbol: NMI_Handler
   Definitions
      At line 468 in file startup_LPC17xx.s
   Uses
      At line 61 in file startup_LPC17xx.s
      At line 469 in file startup_LPC17xx.s

PLL0_IRQHandler 0000024A

Symbol: PLL0_IRQHandler
   Definitions
      At line 564 in file startup_LPC17xx.s
   Uses
      At line 93 in file startup_LPC17xx.s
      At line 528 in file startup_LPC17xx.s

PLL1_IRQHandler 0000024A

Symbol: PLL1_IRQHandler
   Definitions
      At line 580 in file startup_LPC17xx.s
   Uses
      At line 109 in file startup_LPC17xx.s
      At line 544 in file startup_LPC17xx.s

PWM1_IRQHandler 0000024A

Symbol: PWM1_IRQHandler
   Definitions
      At line 557 in file startup_LPC17xx.s
   Uses
      At line 86 in file startup_LPC17xx.s
      At line 521 in file startup_LPC17xx.s

PendSV_Handler 00000246

Symbol: PendSV_Handler
   Definitions
      At line 501 in file startup_LPC17xx.s
   Uses
      At line 73 in file startup_LPC17xx.s
      At line 502 in file startup_LPC17xx.s

QEI_IRQHandler 0000024A

Symbol: QEI_IRQHandler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 579 in file startup_LPC17xx.s
   Uses
      At line 108 in file startup_LPC17xx.s
      At line 543 in file startup_LPC17xx.s

RIT_IRQHandler 0000024A

Symbol: RIT_IRQHandler
   Definitions
      At line 577 in file startup_LPC17xx.s
   Uses
      At line 106 in file startup_LPC17xx.s
      At line 541 in file startup_LPC17xx.s

RTC_IRQHandler 0000024A

Symbol: RTC_IRQHandler
   Definitions
      At line 565 in file startup_LPC17xx.s
   Uses
      At line 94 in file startup_LPC17xx.s
      At line 529 in file startup_LPC17xx.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 143 in file startup_LPC17xx.s
   Uses
      At line 60 in file startup_LPC17xx.s
      At line 144 in file startup_LPC17xx.s

SPI_IRQHandler 0000024A

Symbol: SPI_IRQHandler
   Definitions
      At line 561 in file startup_LPC17xx.s
   Uses
      At line 90 in file startup_LPC17xx.s
      At line 525 in file startup_LPC17xx.s

SSP0_IRQHandler 0000024A

Symbol: SSP0_IRQHandler
   Definitions
      At line 562 in file startup_LPC17xx.s
   Uses
      At line 91 in file startup_LPC17xx.s
      At line 526 in file startup_LPC17xx.s

SSP1_IRQHandler 0000024A

Symbol: SSP1_IRQHandler
   Definitions
      At line 563 in file startup_LPC17xx.s
   Uses
      At line 92 in file startup_LPC17xx.s
      At line 527 in file startup_LPC17xx.s




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

SVC_Handler 00000242

Symbol: SVC_Handler
   Definitions
      At line 492 in file startup_LPC17xx.s
   Uses
      At line 70 in file startup_LPC17xx.s
      At line 493 in file startup_LPC17xx.s

SysTick_Handler 00000248

Symbol: SysTick_Handler
   Definitions
      At line 505 in file startup_LPC17xx.s
   Uses
      At line 74 in file startup_LPC17xx.s
      At line 506 in file startup_LPC17xx.s

TIMER0_IRQHandler 0000024A

Symbol: TIMER0_IRQHandler
   Definitions
      At line 549 in file startup_LPC17xx.s
   Uses
      At line 78 in file startup_LPC17xx.s
      At line 513 in file startup_LPC17xx.s

TIMER1_IRQHandler 0000024A

Symbol: TIMER1_IRQHandler
   Definitions
      At line 550 in file startup_LPC17xx.s
   Uses
      At line 79 in file startup_LPC17xx.s
      At line 514 in file startup_LPC17xx.s

TIMER2_IRQHandler 0000024A

Symbol: TIMER2_IRQHandler
   Definitions
      At line 551 in file startup_LPC17xx.s
   Uses
      At line 80 in file startup_LPC17xx.s
      At line 515 in file startup_LPC17xx.s

TIMER3_IRQHandler 0000024A

Symbol: TIMER3_IRQHandler
   Definitions
      At line 552 in file startup_LPC17xx.s
   Uses
      At line 81 in file startup_LPC17xx.s
      At line 516 in file startup_LPC17xx.s

UART0_IRQHandler 0000024A

Symbol: UART0_IRQHandler
   Definitions
      At line 553 in file startup_LPC17xx.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 82 in file startup_LPC17xx.s
      At line 517 in file startup_LPC17xx.s

UART1_IRQHandler 0000024A

Symbol: UART1_IRQHandler
   Definitions
      At line 554 in file startup_LPC17xx.s
   Uses
      At line 83 in file startup_LPC17xx.s
      At line 518 in file startup_LPC17xx.s

UART2_IRQHandler 0000024A

Symbol: UART2_IRQHandler
   Definitions
      At line 555 in file startup_LPC17xx.s
   Uses
      At line 84 in file startup_LPC17xx.s
      At line 519 in file startup_LPC17xx.s

UART3_IRQHandler 0000024A

Symbol: UART3_IRQHandler
   Definitions
      At line 556 in file startup_LPC17xx.s
   Uses
      At line 85 in file startup_LPC17xx.s
      At line 520 in file startup_LPC17xx.s

USBActivity_IRQHandler 0000024A

Symbol: USBActivity_IRQHandler
   Definitions
      At line 581 in file startup_LPC17xx.s
   Uses
      At line 110 in file startup_LPC17xx.s
      At line 545 in file startup_LPC17xx.s

USB_IRQHandler 0000024A

Symbol: USB_IRQHandler
   Definitions
      At line 572 in file startup_LPC17xx.s
   Uses
      At line 101 in file startup_LPC17xx.s
      At line 536 in file startup_LPC17xx.s

UsageFault_Handler 00000240

Symbol: UsageFault_Handler
   Definitions
      At line 488 in file startup_LPC17xx.s
   Uses
      At line 65 in file startup_LPC17xx.s
      At line 489 in file startup_LPC17xx.s

WDT_IRQHandler 0000024A



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols


Symbol: WDT_IRQHandler
   Definitions
      At line 548 in file startup_LPC17xx.s
   Uses
      At line 77 in file startup_LPC17xx.s
      At line 512 in file startup_LPC17xx.s

__user_initial_stackheap 0000024C

Symbol: __user_initial_stackheap
   Definitions
      At line 604 in file startup_LPC17xx.s
   Uses
      At line 603 in file startup_LPC17xx.s
Comment: __user_initial_stackheap used once
end_bad 00000222

Symbol: end_bad
   Definitions
      At line 438 in file startup_LPC17xx.s
   Uses
      At line 413 in file startup_LPC17xx.s
      At line 421 in file startup_LPC17xx.s
      At line 423 in file startup_LPC17xx.s

end_end 00000234

Symbol: end_end
   Definitions
      At line 447 in file startup_LPC17xx.s
   Uses
      At line 441 in file startup_LPC17xx.s
Comment: end_end used once
end_good 0000022C

Symbol: end_good
   Definitions
      At line 443 in file startup_LPC17xx.s
   Uses
      At line 430 in file startup_LPC17xx.s
Comment: end_good used once
loop_one 000001C8

Symbol: loop_one
   Definitions
      At line 387 in file startup_LPC17xx.s
   Uses
      At line 393 in file startup_LPC17xx.s
Comment: loop_one used once
loop_three 00000204

Symbol: loop_three
   Definitions
      At line 417 in file startup_LPC17xx.s
   Uses
      At line 425 in file startup_LPC17xx.s
Comment: loop_three used once
loop_two 000001E6



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols


Symbol: loop_two
   Definitions
      At line 400 in file startup_LPC17xx.s
   Uses
      At line 405 in file startup_LPC17xx.s
Comment: loop_two used once
magicSquare 000001B6

Symbol: magicSquare
   Definitions
      At line 378 in file startup_LPC17xx.s
   Uses
      At line 174 in file startup_LPC17xx.s
Comment: magicSquare used once
matrix 00000014

Symbol: matrix
   Definitions
      At line 179 in file startup_LPC17xx.s
   Uses
      At line 170 in file startup_LPC17xx.s
Comment: matrix used once
mySMUAD 00000148

Symbol: mySMUAD
   Definitions
      At line 317 in file startup_LPC17xx.s
   Uses
      None
Comment: mySMUAD unused
mySMUSD 0000017E

Symbol: mySMUSD
   Definitions
      At line 347 in file startup_LPC17xx.s
   Uses
      None
Comment: mySMUSD unused
myUADD8 0000001D

Symbol: myUADD8
   Definitions
      At line 186 in file startup_LPC17xx.s
   Uses
      None
Comment: myUADD8 unused
myUSAD8 000000B6

Symbol: myUSAD8
   Definitions
      At line 249 in file startup_LPC17xx.s
   Uses
      None
Comment: myUSAD8 unused
stop 00000012

Symbol: stop
   Definitions



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

      At line 177 in file startup_LPC17xx.s
   Uses
      At line 177 in file startup_LPC17xx.s
Comment: stop used once
61 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file startup_LPC17xx.s
   Uses
      At line 46 in file startup_LPC17xx.s
      At line 608 in file startup_LPC17xx.s

N 00000003

Symbol: N
   Definitions
      At line 127 in file startup_LPC17xx.s
   Uses
      At line 171 in file startup_LPC17xx.s
Comment: N used once
N_sq 00000009

Symbol: N_sq
   Definitions
      At line 128 in file startup_LPC17xx.s
   Uses
      At line 131 in file startup_LPC17xx.s
Comment: N_sq used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file startup_LPC17xx.s
   Uses
      At line 34 in file startup_LPC17xx.s
      At line 607 in file startup_LPC17xx.s

myArea_size 00000018

Symbol: myArea_size
   Definitions
      At line 120 in file startup_LPC17xx.s
   Uses
      At line 123 in file startup_LPC17xx.s
Comment: myArea_size used once
5 symbols
420 symbols in table
