


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004         
  120 00000004 00000018 
                       myArea_size
                               EQU              0x00000018
  121 00000004         
  122 00000004                 AREA             myArea, NOINIT, READWRITE
  123 00000000         myArea_mem



ARM Macro Assembler    Page 4 


                               SPACE            myArea_size
  124 00000018         myArea_p
  125 00000018         
  126 00000018         
  127 00000018 00000003 
                       N       EQU              0x00000003
  128 00000018 00000009 
                       N_sq    EQU              0x00000009
  129 00000018         
  130 00000018                 AREA             myVec, READWRITE
  131 00000000 00 00 00 
              00 00 00 
              00 00 00 myVec_mem
                               SPACE            N_sq
  132 00000009         myVec_p
  133 00000009         
  134 00000009         
  135 00000009         
  136 00000009         
  137 00000009         
  138 00000009                 AREA             |.text|, CODE, READONLY
  139 00000000         
  140 00000000         
  141 00000000         ; Reset Handler
  142 00000000         
  143 00000000         Reset_Handler
                               PROC
  144 00000000                 EXPORT           Reset_Handler             [WEAK
]
  145 00000000         
  146 00000000 48BC            LDR              r0, =0x7A30458D
  147 00000002 49BD            LDR              r1, =0xC3159EAA
  148 00000004         
  149 00000004         ; Ex1
  150 00000004         ;BL myUADD8    
  151 00000004         
  152 00000004         ; Ex2
  153 00000004         ;LDR r6, =myArea_p
  154 00000004         ;STMIA r6, {r0, r1}
  155 00000004         ;BL myUSAD8
  156 00000004         ;LDR r5, [r6]
  157 00000004         
  158 00000004         ; Ex3A
  159 00000004         ;PUSH {r0,r1,r6}
  160 00000004         ;BL mySMUAD
  161 00000004         ;POP {r0,r1,r6}
  162 00000004         
  163 00000004         
  164 00000004         ; Ex3B
  165 00000004         ;PUSH {r0,r1,r7}
  166 00000004         ;BL mySMUSD
  167 00000004         ;POP {r0,r1,r7}
  168 00000004         
  169 00000004         ; Ex4
  170 00000004 48BD            LDR              r0, =matrix
  171 00000006 F04F 0103       LDR              r1, =N
  172 0000000A         
  173 0000000A B407            PUSH             {r0-r2}
  174 0000000C F7FF FFFE       BL               magicSquare



ARM Macro Assembler    Page 5 


  175 00000010 BC07            POP              {r0-r2}
  176 00000012         
  177 00000012 E7FE    stop    B                stop
  178 00000014         
  179 00000014 04 09 02 
              03 05 07 
              08 01 06 matrix  DCB              4,9,2,3,5,7,8,1,6
  180 0000001D         
  181 0000001D                 ENDP
  182 0000001D         
  183 0000001D         
  184 0000001D         
  185 0000001D         
  186 0000001D         myUADD8 PROC
  187 0000001D         
  188 0000001D 00 B503         PUSH{r0,r1,LR}
  189 00000020 EA4F 6210       LSR              r2, r0, #24
  190 00000024 EA4F 6311       LSR              r3, r1, #24
  191 00000028         
  192 00000028 EB02 0503       ADD              r5, r2, r3
  193 0000002C         
  194 0000002C EA4F 6505       LSL              r5, r5, #24
  195 00000030 EA4F 6515       LSR              r5, r5, #24
  196 00000034         
  197 00000034 EA4F 2404       LSL              r4, r4, #8
  198 00000038 442C            ADD              r4, r4, r5
  199 0000003A         
  200 0000003A EA4F 4210       LSR              r2, r0, #16
  201 0000003E EA4F 6202       LSL              r2, r2, #24
  202 00000042 EA4F 6212       LSR              r2, r2, #24
  203 00000046 EA4F 4311       LSR              r3, r1, #16
  204 0000004A EA4F 6303       LSL              r3, r3, #24
  205 0000004E EA4F 6313       LSR              r3, r3, #24
  206 00000052         
  207 00000052 EB02 0503       ADD              r5, r2, r3
  208 00000056         
  209 00000056 EA4F 6505       LSL              r5, r5, #24
  210 0000005A EA4F 6515       LSR              r5, r5, #24
  211 0000005E         
  212 0000005E EA4F 2404       LSL              r4, r4, #8
  213 00000062 442C            ADD              r4, r4, r5
  214 00000064         
  215 00000064 EA4F 2210       LSR              r2, r0, #8
  216 00000068 EA4F 6202       LSL              r2, r2, #24
  217 0000006C EA4F 6212       LSR              r2, r2, #24
  218 00000070 EA4F 2311       LSR              r3, r1, #8
  219 00000074 EA4F 6303       LSL              r3, r3, #24
  220 00000078 EA4F 6313       LSR              r3, r3, #24
  221 0000007C         
  222 0000007C EB02 0503       ADD              r5, r2, r3
  223 00000080         
  224 00000080 EA4F 6505       LSL              r5, r5, #24
  225 00000084 EA4F 6515       LSR              r5, r5, #24
  226 00000088         
  227 00000088 EA4F 2404       LSL              r4, r4, #8
  228 0000008C 442C            ADD              r4, r4, r5
  229 0000008E         
  230 0000008E 4602            MOV              r2, r0
  231 00000090 EA4F 6202       LSL              r2, r2, #24



ARM Macro Assembler    Page 6 


  232 00000094 EA4F 6212       LSR              r2, r2, #24
  233 00000098 460B            MOV              r3, r1
  234 0000009A EA4F 6303       LSL              r3, r3, #24
  235 0000009E EA4F 6313       LSR              r3, r3, #24
  236 000000A2         
  237 000000A2 EB02 0503       ADD              r5, r2, r3
  238 000000A6         
  239 000000A6 EA4F 6505       LSL              r5, r5, #24
  240 000000AA EA4F 6515       LSR              r5, r5, #24
  241 000000AE         
  242 000000AE EA4F 2404       LSL              r4, r4, #8
  243 000000B2 442C            ADD              r4, r4, r5
  244 000000B4         
  245 000000B4 BD03            POP{r0,r1,PC}
  246 000000B6         
  247 000000B6                 ENDP
  248 000000B6         
  249 000000B6         
  250 000000B6         myUSAD8 PROC
  251 000000B6         
  252 000000B6 B57F            PUSH             {r0-r6,LR}
  253 000000B8         
  254 000000B8 E896 0003       LDMIA            r6, {r0,r1}
  255 000000BC         
  256 000000BC F04F 0400       MOV              r4, #0
  257 000000C0         
  258 000000C0 EA4F 6210       LSR              r2, r0, #24
  259 000000C4 EA4F 6311       LSR              r3, r1, #24
  260 000000C8         
  261 000000C8 1AD5            SUBS             r5, r2, r3  ; Caculate the abso
                                                            lute 
  262 000000CA BF48 426D       NEGMI            r5, r5      ; value of the sub
  263 000000CE         
  264 000000CE 442C            ADD              r4, r4, r5
  265 000000D0         
  266 000000D0 EA4F 4210       LSR              r2, r0, #16
  267 000000D4 EA4F 6202       LSL              r2, r2, #24
  268 000000D8 EA4F 6212       LSR              r2, r2, #24
  269 000000DC EA4F 4311       LSR              r3, r1, #16
  270 000000E0 EA4F 6303       LSL              r3, r3, #24
  271 000000E4 EA4F 6313       LSR              r3, r3, #24
  272 000000E8         
  273 000000E8 1AD5            SUBS             r5, r2, r3  ; Caculate the abso
                                                            lute 
  274 000000EA BF48 426D       NEGMI            r5, r5      ; value of the sub
  275 000000EE         
  276 000000EE EA4F 6505       LSL              r5, r5, #24
  277 000000F2 EA4F 6515       LSR              r5, r5, #24
  278 000000F6         
  279 000000F6 442C            ADD              r4, r4, r5
  280 000000F8         
  281 000000F8 EA4F 2210       LSR              r2, r0, #8
  282 000000FC EA4F 6202       LSL              r2, r2, #24
  283 00000100 EA4F 6212       LSR              r2, r2, #24
  284 00000104 EA4F 2311       LSR              r3, r1, #8
  285 00000108 EA4F 6303       LSL              r3, r3, #24
  286 0000010C EA4F 6313       LSR              r3, r3, #24
  287 00000110         
  288 00000110 1AD5            SUBS             r5, r2, r3  ; Caculate the abso



ARM Macro Assembler    Page 7 


                                                            lute 
  289 00000112 BF48 426D       NEGMI            r5, r5      ; value of the sub
  290 00000116         
  291 00000116 EA4F 6505       LSL              r5, r5, #24
  292 0000011A EA4F 6515       LSR              r5, r5, #24
  293 0000011E         
  294 0000011E 442C            ADD              r4, r4, r5
  295 00000120         
  296 00000120 4602            MOV              r2, r0
  297 00000122 EA4F 6202       LSL              r2, r2, #24
  298 00000126 EA4F 6212       LSR              r2, r2, #24
  299 0000012A 460B            MOV              r3, r1
  300 0000012C EA4F 6303       LSL              r3, r3, #24
  301 00000130 EA4F 6313       LSR              r3, r3, #24
  302 00000134         
  303 00000134 1AD5            SUBS             r5, r2, r3  ; Caculate the abso
                                                            lute 
  304 00000136 BF48 426D       NEGMI            r5, r5      ; value of the sub
  305 0000013A         
  306 0000013A EA4F 6505       LSL              r5, r5, #24
  307 0000013E EA4F 6515       LSR              r5, r5, #24
  308 00000142         
  309 00000142 442C            ADD              r4, r4, r5
  310 00000144         
  311 00000144 6034            STMIA            r6, {r4}
  312 00000146         
  313 00000146 BD7F            POP              {r0-r6,PC}
  314 00000148         
  315 00000148                 ENDP
  316 00000148         
  317 00000148         
  318 00000148         mySMUAD PROC
  319 00000148         
  320 00000148 E92D 43FF       PUSH{r0-r9,LR}
  321 0000014C 980B            LDR              r0, [sp, #44]
  322 0000014E 990C            LDR              r1, [sp, #48]
  323 00000150         
  324 00000150 F04F 0700       MOV              r7, #0      ; INIT to 0
  325 00000154         
  326 00000154 EA4F 4220       ASR              r2, r0, #16 ; Shift arithmetica
                                                            lly right and save 
                                                            in OpB
  327 00000158 EA4F 4000       MOV              r0, r0, LSL #16 ; Shift logical
                                                            ly left
  328 0000015C EA4F 4020       MOV              r0, r0, ASR #16 ; and then arit
                                                            hmetically right 
  329 00000160         ; to take the first MSB halfword
  330 00000160         
  331 00000160 EA4F 4321       ASR              r3, r1, #16 ; Do the same with 
                                                            OpD and OpC
  332 00000164 EA4F 4101       MOV              r1, r1, LSL #16
  333 00000168 EA4F 4121       MOV              r1, r1, ASR #16
  334 0000016C         
  335 0000016C FB00 F401       MUL              r4, r0, r1  ; Multiply the firs
                                                            t pair of halfword
  336 00000170 FB02 F503       MUL              r5, r2, r3  ; and the second on
                                                            e
  337 00000174         
  338 00000174         



ARM Macro Assembler    Page 8 


  339 00000174 4426            ADD              r6, r6, r4
  340 00000176 442E            ADD              r6, r6, r5
  341 00000178         
  342 00000178 960D            STR              r6, [sp, #52]
  343 0000017A         
  344 0000017A E8BD 83FF       POP{r0-r9,PC}
  345 0000017E         
  346 0000017E                 ENDP
  347 0000017E         
  348 0000017E         mySMUSD PROC
  349 0000017E         
  350 0000017E E92D 43FF       PUSH{r0-r9,LR}
  351 00000182 980B            LDR              r0, [sp, #44]
  352 00000184 990C            LDR              r1, [sp, #48]
  353 00000186         
  354 00000186 F04F 0700       MOV              r7, #0      ; INIT to 0
  355 0000018A         
  356 0000018A EA4F 4220       ASR              r2, r0, #16 ; Shift arithmetica
                                                            lly right and save 
                                                            in OpB
  357 0000018E EA4F 4000       MOV              r0, r0, LSL #16 ; Shift logical
                                                            ly left
  358 00000192 EA4F 4020       MOV              r0, r0, ASR #16 ; and then arit
                                                            hmetically right 
  359 00000196         ; to take the first MSB halfword
  360 00000196         
  361 00000196 EA4F 4321       ASR              r3, r1, #16 ; Do the same with 
                                                            OpD and OpC
  362 0000019A EA4F 4101       MOV              r1, r1, LSL #16
  363 0000019E EA4F 4121       MOV              r1, r1, ASR #16
  364 000001A2         
  365 000001A2 FB00 F401       MUL              r4, r0, r1  ; Multiply the firs
                                                            t pair of halfword
  366 000001A6 FB02 F503       MUL              r5, r2, r3  ; and the second on
                                                            e
  367 000001AA         
  368 000001AA         
  369 000001AA 4426            ADD              r6, r6, r4
  370 000001AC EBA6 0605       SUB              r6, r6, r5
  371 000001B0         
  372 000001B0 960D            STR              r6, [sp, #52]
  373 000001B2         
  374 000001B2 E8BD 83FF       POP{r0-r9,PC}
  375 000001B6         
  376 000001B6                 ENDP
  377 000001B6         
  378 000001B6         
  379 000001B6         magicSquare
                               PROC
  380 000001B6         
  381 000001B6 E92D 5FFF       PUSH             {r0-r12, LR}
  382 000001BA F04F 0201       MOV              r2, #1
  383 000001BE 980E            LDR              r0, [sp, #56]
  384 000001C0 990F            LDR              r1, [sp, #60]
  385 000001C2 FB01 F101       MUL              r1, r1, r1
  386 000001C6 4B4E            LDR              r3, =myVec_p
  387 000001C8         
  388 000001C8         loop_one
  389 000001C8 F1A1 0101       SUB              r1, r1, #1



ARM Macro Assembler    Page 9 


  390 000001CC F810 4B01       LDRB             r4, [r0], #1
  391 000001D0 F1A4 0401       SUB              r4, r4, #1
  392 000001D4 551A            STRB             r2, [r3, r4]
  393 000001D6 2900            CMP              r1, #0
  394 000001D8 D1F6            BNE              loop_one
  395 000001DA         
  396 000001DA 980E            LDR              r0, [sp, #56]
  397 000001DC 990F            LDR              r1, [sp, #60]
  398 000001DE FB01 F101       MUL              r1, r1, r1
  399 000001E2 F04F 0400       MOV              r4, #0
  400 000001E6         
  401 000001E6         loop_two
  402 000001E6 F1A1 0101       SUB              r1, r1, #1
  403 000001EA F813 2B01       LDRB             r2, [r3], #1
  404 000001EE 4414            ADD              r4, r4, r2
  405 000001F0 2900            CMP              r1, #0
  406 000001F2 D1F8            BNE              loop_two
  407 000001F4         
  408 000001F4 980E            LDR              r0, [sp, #56]
  409 000001F6 990F            LDR              r1, [sp, #60]
  410 000001F8 FB01 F101       MUL              r1, r1, r1
  411 000001FC 460D            MOV              r5, r1
  412 000001FE         
  413 000001FE 428C            CMP              r4, r1
  414 00000200 D15C            BNE              end_bad
  415 00000202         
  416 00000202 4B3F            LDR              r3, =myVec_p
  417 00000204         
  418 00000204         loop_three
  419 00000204 F1A1 0101       SUB              r1, r1, #1
  420 00000208 F813 2B01       LDRB             r2, [r3], #1
  421 0000020C 42AA            CMP              r2, r5
  422 0000020E DC55            BGT              end_bad
  423 00000210 2A01            CMP              r2, #1
  424 00000212 DB53            BLT              end_bad
  425 00000214 2900            CMP              r1, #0
  426 00000216 D1F5            BNE              loop_three
  427 00000218         
  428 00000218 980E            LDR              r0, [sp, #56]
  429 0000021A 990F            LDR              r1, [sp, #60]
  430 0000021C 460D            MOV              r5, r1
  431 0000021E 462E            MOV              r6, r5
  432 00000220 F1A6 0601       SUB              r6, #1
  433 00000224         ;B end_good
  434 00000224         
  435 00000224         ; Calculate M
  436 00000224 FB01 F101       MUL              r1, r1, r1
  437 00000228 F101 0101       ADD              r1, #1
  438 0000022C FB01 F105       MUL              r1, r1, r5
  439 00000230 EA4F 0151       LSR              r1, #1
  440 00000234 F04F 0400       MOV              r4, #0
  441 00000238 F04F 0700       MOV              r7, #0
  442 0000023C E004            B                loop_four
  443 0000023E         
  444 0000023E         loop_out
  445 0000023E F1A6 0601       SUB              r6, r6, #1
  446 00000242 9D0F            LDR              r5, [sp, #60]
  447 00000244 F04F 0400       MOV              r4, #0
  448 00000248         



ARM Macro Assembler    Page 10 


  449 00000248         loop_four
  450 00000248 F1A5 0501       SUB              r5, r5, #1
  451 0000024C F810 2B01       LDRB             r2, [r0], #1
  452 00000250 4414            ADD              r4, r4, r2
  453 00000252 42B5            CMP              r5, r6
  454 00000254 BF08 18BF       ADDEQ            r7, r7, r2
  455 00000258 2D00            CMP              r5, #0
  456 0000025A D1F5            BNE              loop_four
  457 0000025C 428C            CMP              r4, r1
  458 0000025E D12D            BNE              end_bad
  459 00000260 2E00            CMP              r6, #0
  460 00000262 D1EC            BNE              loop_out
  461 00000264 428F            CMP              r7, r1
  462 00000266 D129            BNE              end_bad
  463 00000268         
  464 00000268         ; Start from the top-right element
  465 00000268 980E            LDR              r0, [sp, #56]
  466 0000026A 9D0F            LDR              r5, [sp, #60]
  467 0000026C 4428            ADD              r0, r0, r5
  468 0000026E F1A0 0001       SUB              r0, r0, #1
  469 00000272 F04F 0601       MOV              r6, #1
  470 00000276 46A8            MOV              r8, r5
  471 00000278 F04F 0700       MOV              r7, #0
  472 0000027C F04F 0400       MOV              r4, #0
  473 00000280 F04F 0A00       MOV              r10, #0
  474 00000284 E008            B                loop_five
  475 00000286         
  476 00000286         loop_out_two
  477 00000286 F106 0601       ADD              r6, r6, #1
  478 0000028A F1A0 0001       SUB              r0, r0, #1
  479 0000028E 9D0F            LDR              r5, [sp, #60]
  480 00000290 F04F 0400       MOV              r4, #0
  481 00000294 F04F 0700       MOV              r7, #0
  482 00000298         
  483 00000298         loop_five
  484 00000298 F1A5 0501       SUB              r5, r5, #1
  485 0000029C 5DC2            LDRB             r2, [r0, r7]
  486 0000029E 4414            ADD              r4, r4, r2
  487 000002A0 4447            ADD              r7, r7, r8
  488 000002A2 EB05 0906       ADD              r9, r5, r6
  489 000002A6 45C1            CMP              r9, r8
  490 000002A8 BF08 4492       ADDEQ            r10, r10, r2
  491 000002AC 2D00            CMP              r5, #0
  492 000002AE D1F3            BNE              loop_five
  493 000002B0 428C            CMP              r4, r1
  494 000002B2 D103            BNE              end_bad
  495 000002B4 4546            CMP              r6, r8
  496 000002B6 D1E6            BNE              loop_out_two
  497 000002B8 458A            CMP              r10, r1
  498 000002BA D004            BEQ              end_good
  499 000002BC         
  500 000002BC         end_bad
  501 000002BC F04F 0C00       MOV              r12, #0
  502 000002C0 F8CD C040       STR              r12, [sp, #64]
  503 000002C4 E003            B                end_end
  504 000002C6         
  505 000002C6         end_good
  506 000002C6 F04F 0C01       MOV              r12, #1
  507 000002CA F8CD C040       STR              r12, [sp, #64]



ARM Macro Assembler    Page 11 


  508 000002CE         
  509 000002CE         end_end
  510 000002CE E8BD 9FFF       POP              {r0-r12, PC}
  511 000002D2         
  512 000002D2                 ENDP
  513 000002D2         
  514 000002D2         
  515 000002D2         
  516 000002D2         
  517 000002D2         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  518 000002D2         
  519 000002D2         NMI_Handler
                               PROC
  520 000002D2                 EXPORT           NMI_Handler               [WEAK
]
  521 000002D2 E7FE            B                .
  522 000002D4                 ENDP
  524 000002D4         HardFault_Handler
                               PROC
  525 000002D4                 EXPORT           HardFault_Handler         [WEAK
]
  526 000002D4 E7FE            B                .
  527 000002D6                 ENDP
  529 000002D6         MemManage_Handler
                               PROC
  530 000002D6                 EXPORT           MemManage_Handler         [WEAK
]
  531 000002D6 E7FE            B                .
  532 000002D8                 ENDP
  534 000002D8         BusFault_Handler
                               PROC
  535 000002D8                 EXPORT           BusFault_Handler          [WEAK
]
  536 000002D8 E7FE            B                .
  537 000002DA                 ENDP
  539 000002DA         UsageFault_Handler
                               PROC
  540 000002DA                 EXPORT           UsageFault_Handler        [WEAK
]
  541 000002DA E7FE            B                .
  542 000002DC                 ENDP
  543 000002DC         SVC_Handler
                               PROC
  544 000002DC                 EXPORT           SVC_Handler               [WEAK
]
  545 000002DC E7FE            B                .
  546 000002DE                 ENDP
  548 000002DE         DebugMon_Handler
                               PROC
  549 000002DE                 EXPORT           DebugMon_Handler          [WEAK
]
  550 000002DE E7FE            B                .
  551 000002E0                 ENDP
  552 000002E0         PendSV_Handler
                               PROC
  553 000002E0                 EXPORT           PendSV_Handler            [WEAK
]
  554 000002E0 E7FE            B                .



ARM Macro Assembler    Page 12 


  555 000002E2                 ENDP
  556 000002E2         SysTick_Handler
                               PROC
  557 000002E2                 EXPORT           SysTick_Handler           [WEAK
]
  558 000002E2 E7FE            B                .
  559 000002E4                 ENDP
  560 000002E4         
  561 000002E4         Default_Handler
                               PROC
  562 000002E4         
  563 000002E4                 EXPORT           WDT_IRQHandler            [WEAK
]
  564 000002E4                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  565 000002E4                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  566 000002E4                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  567 000002E4                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  568 000002E4                 EXPORT           UART0_IRQHandler          [WEAK
]
  569 000002E4                 EXPORT           UART1_IRQHandler          [WEAK
]
  570 000002E4                 EXPORT           UART2_IRQHandler          [WEAK
]
  571 000002E4                 EXPORT           UART3_IRQHandler          [WEAK
]
  572 000002E4                 EXPORT           PWM1_IRQHandler           [WEAK
]
  573 000002E4                 EXPORT           I2C0_IRQHandler           [WEAK
]
  574 000002E4                 EXPORT           I2C1_IRQHandler           [WEAK
]
  575 000002E4                 EXPORT           I2C2_IRQHandler           [WEAK
]
  576 000002E4                 EXPORT           SPI_IRQHandler            [WEAK
]
  577 000002E4                 EXPORT           SSP0_IRQHandler           [WEAK
]
  578 000002E4                 EXPORT           SSP1_IRQHandler           [WEAK
]
  579 000002E4                 EXPORT           PLL0_IRQHandler           [WEAK
]
  580 000002E4                 EXPORT           RTC_IRQHandler            [WEAK
]
  581 000002E4                 EXPORT           EINT0_IRQHandler          [WEAK
]
  582 000002E4                 EXPORT           EINT1_IRQHandler          [WEAK
]
  583 000002E4                 EXPORT           EINT2_IRQHandler          [WEAK
]
  584 000002E4                 EXPORT           EINT3_IRQHandler          [WEAK
]
  585 000002E4                 EXPORT           ADC_IRQHandler            [WEAK
]
  586 000002E4                 EXPORT           BOD_IRQHandler            [WEAK
]



ARM Macro Assembler    Page 13 


  587 000002E4                 EXPORT           USB_IRQHandler            [WEAK
]
  588 000002E4                 EXPORT           CAN_IRQHandler            [WEAK
]
  589 000002E4                 EXPORT           DMA_IRQHandler            [WEAK
]
  590 000002E4                 EXPORT           I2S_IRQHandler            [WEAK
]
  591 000002E4                 EXPORT           ENET_IRQHandler           [WEAK
]
  592 000002E4                 EXPORT           RIT_IRQHandler            [WEAK
]
  593 000002E4                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  594 000002E4                 EXPORT           QEI_IRQHandler            [WEAK
]
  595 000002E4                 EXPORT           PLL1_IRQHandler           [WEAK
]
  596 000002E4                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  597 000002E4                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  598 000002E4         
  599 000002E4         WDT_IRQHandler
  600 000002E4         TIMER0_IRQHandler
  601 000002E4         TIMER1_IRQHandler
  602 000002E4         TIMER2_IRQHandler
  603 000002E4         TIMER3_IRQHandler
  604 000002E4         UART0_IRQHandler
  605 000002E4         UART1_IRQHandler
  606 000002E4         UART2_IRQHandler
  607 000002E4         UART3_IRQHandler
  608 000002E4         PWM1_IRQHandler
  609 000002E4         I2C0_IRQHandler
  610 000002E4         I2C1_IRQHandler
  611 000002E4         I2C2_IRQHandler
  612 000002E4         SPI_IRQHandler
  613 000002E4         SSP0_IRQHandler
  614 000002E4         SSP1_IRQHandler
  615 000002E4         PLL0_IRQHandler
  616 000002E4         RTC_IRQHandler
  617 000002E4         EINT0_IRQHandler
  618 000002E4         EINT1_IRQHandler
  619 000002E4         EINT2_IRQHandler
  620 000002E4         EINT3_IRQHandler
  621 000002E4         ADC_IRQHandler
  622 000002E4         BOD_IRQHandler
  623 000002E4         USB_IRQHandler
  624 000002E4         CAN_IRQHandler
  625 000002E4         DMA_IRQHandler
  626 000002E4         I2S_IRQHandler
  627 000002E4         ENET_IRQHandler
  628 000002E4         RIT_IRQHandler
  629 000002E4         MCPWM_IRQHandler
  630 000002E4         QEI_IRQHandler
  631 000002E4         PLL1_IRQHandler
  632 000002E4         USBActivity_IRQHandler
  633 000002E4         CANActivity_IRQHandler
  634 000002E4         



ARM Macro Assembler    Page 14 


  635 000002E4 E7FE            B                .
  636 000002E6         
  637 000002E6                 ENDP
  638 000002E6         
  639 000002E6         
  640 000002E6 00 00           ALIGN
  641 000002E8         
  642 000002E8         
  643 000002E8         ; User Initial Stack & Heap
  644 000002E8         
  645 000002E8                 IF               :DEF:__MICROLIB
  652 000002E8         
  653 000002E8         ;IMPORT  __use_two_region_memory
  654 000002E8                 EXPORT           __user_initial_stackheap
  655 000002E8         __user_initial_stackheap
  656 000002E8         
  657 000002E8 4806            LDR              R0, =  Heap_Mem
  658 000002EA 4907            LDR              R1, =(Stack_Mem + Stack_Size)
  659 000002EC 4A05            LDR              R2, = (Heap_Mem +  Heap_Size)
  660 000002EE 4B07            LDR              R3, = Stack_Mem
  661 000002F0 4770            BX               LR
  662 000002F2         
  663 000002F2 00 00           ALIGN
  664 000002F4         
  665 000002F4                 ENDIF
  666 000002F4         
  667 000002F4         
  668 000002F4                 END
              7A30458D 
              C3159EAA 
              00000000 
              00000000 
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\startu
p_lpc17xx.d -o.\startup_lpc17xx.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\In
clude -IC:\Keil\ARM\Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=.\startu
p_lpc17xx.lst startup_LPC17xx.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file startup_LPC17xx.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file startup_LPC17xx.s
   Uses
      At line 658 in file startup_LPC17xx.s
      At line 660 in file startup_LPC17xx.s

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file startup_LPC17xx.s
   Uses
      At line 59 in file startup_LPC17xx.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file startup_LPC17xx.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file startup_LPC17xx.s
   Uses
      At line 657 in file startup_LPC17xx.s
      At line 659 in file startup_LPC17xx.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file startup_LPC17xx.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file startup_LPC17xx.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file startup_LPC17xx.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file startup_LPC17xx.s
   Uses
      At line 57 in file startup_LPC17xx.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file startup_LPC17xx.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file startup_LPC17xx.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

myArea 00000000

Symbol: myArea
   Definitions
      At line 122 in file startup_LPC17xx.s
   Uses
      None
Comment: myArea unused
myArea_mem 00000000

Symbol: myArea_mem
   Definitions
      At line 123 in file startup_LPC17xx.s
   Uses
      None
Comment: myArea_mem unused
myArea_p 00000018

Symbol: myArea_p
   Definitions
      At line 124 in file startup_LPC17xx.s
   Uses
      None
Comment: myArea_p unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

myVec 00000000

Symbol: myVec
   Definitions
      At line 130 in file startup_LPC17xx.s
   Uses
      None
Comment: myVec unused
myVec_mem 00000000

Symbol: myVec_mem
   Definitions
      At line 131 in file startup_LPC17xx.s
   Uses
      None
Comment: myVec_mem unused
myVec_p 00000009

Symbol: myVec_p
   Definitions
      At line 132 in file startup_LPC17xx.s
   Uses
      At line 386 in file startup_LPC17xx.s
      At line 416 in file startup_LPC17xx.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 138 in file startup_LPC17xx.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 000002E4

Symbol: ADC_IRQHandler
   Definitions
      At line 621 in file startup_LPC17xx.s
   Uses
      At line 99 in file startup_LPC17xx.s
      At line 585 in file startup_LPC17xx.s

BOD_IRQHandler 000002E4

Symbol: BOD_IRQHandler
   Definitions
      At line 622 in file startup_LPC17xx.s
   Uses
      At line 100 in file startup_LPC17xx.s
      At line 586 in file startup_LPC17xx.s

BusFault_Handler 000002D8

Symbol: BusFault_Handler
   Definitions
      At line 534 in file startup_LPC17xx.s
   Uses
      At line 64 in file startup_LPC17xx.s
      At line 535 in file startup_LPC17xx.s

CANActivity_IRQHandler 000002E4

Symbol: CANActivity_IRQHandler
   Definitions
      At line 633 in file startup_LPC17xx.s
   Uses
      At line 111 in file startup_LPC17xx.s
      At line 597 in file startup_LPC17xx.s

CAN_IRQHandler 000002E4

Symbol: CAN_IRQHandler
   Definitions
      At line 624 in file startup_LPC17xx.s
   Uses
      At line 102 in file startup_LPC17xx.s
      At line 588 in file startup_LPC17xx.s

DMA_IRQHandler 000002E4

Symbol: DMA_IRQHandler
   Definitions
      At line 625 in file startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 103 in file startup_LPC17xx.s
      At line 589 in file startup_LPC17xx.s

DebugMon_Handler 000002DE

Symbol: DebugMon_Handler
   Definitions
      At line 548 in file startup_LPC17xx.s
   Uses
      At line 71 in file startup_LPC17xx.s
      At line 549 in file startup_LPC17xx.s

Default_Handler 000002E4

Symbol: Default_Handler
   Definitions
      At line 561 in file startup_LPC17xx.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 000002E4

Symbol: EINT0_IRQHandler
   Definitions
      At line 617 in file startup_LPC17xx.s
   Uses
      At line 95 in file startup_LPC17xx.s
      At line 581 in file startup_LPC17xx.s

EINT1_IRQHandler 000002E4

Symbol: EINT1_IRQHandler
   Definitions
      At line 618 in file startup_LPC17xx.s
   Uses
      At line 96 in file startup_LPC17xx.s
      At line 582 in file startup_LPC17xx.s

EINT2_IRQHandler 000002E4

Symbol: EINT2_IRQHandler
   Definitions
      At line 619 in file startup_LPC17xx.s
   Uses
      At line 97 in file startup_LPC17xx.s
      At line 583 in file startup_LPC17xx.s

EINT3_IRQHandler 000002E4

Symbol: EINT3_IRQHandler
   Definitions
      At line 620 in file startup_LPC17xx.s
   Uses
      At line 98 in file startup_LPC17xx.s
      At line 584 in file startup_LPC17xx.s

ENET_IRQHandler 000002E4

Symbol: ENET_IRQHandler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 627 in file startup_LPC17xx.s
   Uses
      At line 105 in file startup_LPC17xx.s
      At line 591 in file startup_LPC17xx.s

HardFault_Handler 000002D4

Symbol: HardFault_Handler
   Definitions
      At line 524 in file startup_LPC17xx.s
   Uses
      At line 62 in file startup_LPC17xx.s
      At line 525 in file startup_LPC17xx.s

I2C0_IRQHandler 000002E4

Symbol: I2C0_IRQHandler
   Definitions
      At line 609 in file startup_LPC17xx.s
   Uses
      At line 87 in file startup_LPC17xx.s
      At line 573 in file startup_LPC17xx.s

I2C1_IRQHandler 000002E4

Symbol: I2C1_IRQHandler
   Definitions
      At line 610 in file startup_LPC17xx.s
   Uses
      At line 88 in file startup_LPC17xx.s
      At line 574 in file startup_LPC17xx.s

I2C2_IRQHandler 000002E4

Symbol: I2C2_IRQHandler
   Definitions
      At line 611 in file startup_LPC17xx.s
   Uses
      At line 89 in file startup_LPC17xx.s
      At line 575 in file startup_LPC17xx.s

I2S_IRQHandler 000002E4

Symbol: I2S_IRQHandler
   Definitions
      At line 626 in file startup_LPC17xx.s
   Uses
      At line 104 in file startup_LPC17xx.s
      At line 590 in file startup_LPC17xx.s

MCPWM_IRQHandler 000002E4

Symbol: MCPWM_IRQHandler
   Definitions
      At line 629 in file startup_LPC17xx.s
   Uses
      At line 107 in file startup_LPC17xx.s
      At line 593 in file startup_LPC17xx.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


MemManage_Handler 000002D6

Symbol: MemManage_Handler
   Definitions
      At line 529 in file startup_LPC17xx.s
   Uses
      At line 63 in file startup_LPC17xx.s
      At line 530 in file startup_LPC17xx.s

NMI_Handler 000002D2

Symbol: NMI_Handler
   Definitions
      At line 519 in file startup_LPC17xx.s
   Uses
      At line 61 in file startup_LPC17xx.s
      At line 520 in file startup_LPC17xx.s

PLL0_IRQHandler 000002E4

Symbol: PLL0_IRQHandler
   Definitions
      At line 615 in file startup_LPC17xx.s
   Uses
      At line 93 in file startup_LPC17xx.s
      At line 579 in file startup_LPC17xx.s

PLL1_IRQHandler 000002E4

Symbol: PLL1_IRQHandler
   Definitions
      At line 631 in file startup_LPC17xx.s
   Uses
      At line 109 in file startup_LPC17xx.s
      At line 595 in file startup_LPC17xx.s

PWM1_IRQHandler 000002E4

Symbol: PWM1_IRQHandler
   Definitions
      At line 608 in file startup_LPC17xx.s
   Uses
      At line 86 in file startup_LPC17xx.s
      At line 572 in file startup_LPC17xx.s

PendSV_Handler 000002E0

Symbol: PendSV_Handler
   Definitions
      At line 552 in file startup_LPC17xx.s
   Uses
      At line 73 in file startup_LPC17xx.s
      At line 553 in file startup_LPC17xx.s

QEI_IRQHandler 000002E4

Symbol: QEI_IRQHandler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 630 in file startup_LPC17xx.s
   Uses
      At line 108 in file startup_LPC17xx.s
      At line 594 in file startup_LPC17xx.s

RIT_IRQHandler 000002E4

Symbol: RIT_IRQHandler
   Definitions
      At line 628 in file startup_LPC17xx.s
   Uses
      At line 106 in file startup_LPC17xx.s
      At line 592 in file startup_LPC17xx.s

RTC_IRQHandler 000002E4

Symbol: RTC_IRQHandler
   Definitions
      At line 616 in file startup_LPC17xx.s
   Uses
      At line 94 in file startup_LPC17xx.s
      At line 580 in file startup_LPC17xx.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 143 in file startup_LPC17xx.s
   Uses
      At line 60 in file startup_LPC17xx.s
      At line 144 in file startup_LPC17xx.s

SPI_IRQHandler 000002E4

Symbol: SPI_IRQHandler
   Definitions
      At line 612 in file startup_LPC17xx.s
   Uses
      At line 90 in file startup_LPC17xx.s
      At line 576 in file startup_LPC17xx.s

SSP0_IRQHandler 000002E4

Symbol: SSP0_IRQHandler
   Definitions
      At line 613 in file startup_LPC17xx.s
   Uses
      At line 91 in file startup_LPC17xx.s
      At line 577 in file startup_LPC17xx.s

SSP1_IRQHandler 000002E4

Symbol: SSP1_IRQHandler
   Definitions
      At line 614 in file startup_LPC17xx.s
   Uses
      At line 92 in file startup_LPC17xx.s
      At line 578 in file startup_LPC17xx.s




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

SVC_Handler 000002DC

Symbol: SVC_Handler
   Definitions
      At line 543 in file startup_LPC17xx.s
   Uses
      At line 70 in file startup_LPC17xx.s
      At line 544 in file startup_LPC17xx.s

SysTick_Handler 000002E2

Symbol: SysTick_Handler
   Definitions
      At line 556 in file startup_LPC17xx.s
   Uses
      At line 74 in file startup_LPC17xx.s
      At line 557 in file startup_LPC17xx.s

TIMER0_IRQHandler 000002E4

Symbol: TIMER0_IRQHandler
   Definitions
      At line 600 in file startup_LPC17xx.s
   Uses
      At line 78 in file startup_LPC17xx.s
      At line 564 in file startup_LPC17xx.s

TIMER1_IRQHandler 000002E4

Symbol: TIMER1_IRQHandler
   Definitions
      At line 601 in file startup_LPC17xx.s
   Uses
      At line 79 in file startup_LPC17xx.s
      At line 565 in file startup_LPC17xx.s

TIMER2_IRQHandler 000002E4

Symbol: TIMER2_IRQHandler
   Definitions
      At line 602 in file startup_LPC17xx.s
   Uses
      At line 80 in file startup_LPC17xx.s
      At line 566 in file startup_LPC17xx.s

TIMER3_IRQHandler 000002E4

Symbol: TIMER3_IRQHandler
   Definitions
      At line 603 in file startup_LPC17xx.s
   Uses
      At line 81 in file startup_LPC17xx.s
      At line 567 in file startup_LPC17xx.s

UART0_IRQHandler 000002E4

Symbol: UART0_IRQHandler
   Definitions
      At line 604 in file startup_LPC17xx.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 82 in file startup_LPC17xx.s
      At line 568 in file startup_LPC17xx.s

UART1_IRQHandler 000002E4

Symbol: UART1_IRQHandler
   Definitions
      At line 605 in file startup_LPC17xx.s
   Uses
      At line 83 in file startup_LPC17xx.s
      At line 569 in file startup_LPC17xx.s

UART2_IRQHandler 000002E4

Symbol: UART2_IRQHandler
   Definitions
      At line 606 in file startup_LPC17xx.s
   Uses
      At line 84 in file startup_LPC17xx.s
      At line 570 in file startup_LPC17xx.s

UART3_IRQHandler 000002E4

Symbol: UART3_IRQHandler
   Definitions
      At line 607 in file startup_LPC17xx.s
   Uses
      At line 85 in file startup_LPC17xx.s
      At line 571 in file startup_LPC17xx.s

USBActivity_IRQHandler 000002E4

Symbol: USBActivity_IRQHandler
   Definitions
      At line 632 in file startup_LPC17xx.s
   Uses
      At line 110 in file startup_LPC17xx.s
      At line 596 in file startup_LPC17xx.s

USB_IRQHandler 000002E4

Symbol: USB_IRQHandler
   Definitions
      At line 623 in file startup_LPC17xx.s
   Uses
      At line 101 in file startup_LPC17xx.s
      At line 587 in file startup_LPC17xx.s

UsageFault_Handler 000002DA

Symbol: UsageFault_Handler
   Definitions
      At line 539 in file startup_LPC17xx.s
   Uses
      At line 65 in file startup_LPC17xx.s
      At line 540 in file startup_LPC17xx.s

WDT_IRQHandler 000002E4



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols


Symbol: WDT_IRQHandler
   Definitions
      At line 599 in file startup_LPC17xx.s
   Uses
      At line 77 in file startup_LPC17xx.s
      At line 563 in file startup_LPC17xx.s

__user_initial_stackheap 000002E8

Symbol: __user_initial_stackheap
   Definitions
      At line 655 in file startup_LPC17xx.s
   Uses
      At line 654 in file startup_LPC17xx.s
Comment: __user_initial_stackheap used once
end_bad 000002BC

Symbol: end_bad
   Definitions
      At line 500 in file startup_LPC17xx.s
   Uses
      At line 414 in file startup_LPC17xx.s
      At line 422 in file startup_LPC17xx.s
      At line 424 in file startup_LPC17xx.s
      At line 458 in file startup_LPC17xx.s
      At line 462 in file startup_LPC17xx.s
      At line 494 in file startup_LPC17xx.s

end_end 000002CE

Symbol: end_end
   Definitions
      At line 509 in file startup_LPC17xx.s
   Uses
      At line 503 in file startup_LPC17xx.s
Comment: end_end used once
end_good 000002C6

Symbol: end_good
   Definitions
      At line 505 in file startup_LPC17xx.s
   Uses
      At line 498 in file startup_LPC17xx.s
Comment: end_good used once
loop_five 00000298

Symbol: loop_five
   Definitions
      At line 483 in file startup_LPC17xx.s
   Uses
      At line 474 in file startup_LPC17xx.s
      At line 492 in file startup_LPC17xx.s

loop_four 00000248

Symbol: loop_four
   Definitions
      At line 449 in file startup_LPC17xx.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 442 in file startup_LPC17xx.s
      At line 456 in file startup_LPC17xx.s

loop_one 000001C8

Symbol: loop_one
   Definitions
      At line 388 in file startup_LPC17xx.s
   Uses
      At line 394 in file startup_LPC17xx.s
Comment: loop_one used once
loop_out 0000023E

Symbol: loop_out
   Definitions
      At line 444 in file startup_LPC17xx.s
   Uses
      At line 460 in file startup_LPC17xx.s
Comment: loop_out used once
loop_out_two 00000286

Symbol: loop_out_two
   Definitions
      At line 476 in file startup_LPC17xx.s
   Uses
      At line 496 in file startup_LPC17xx.s
Comment: loop_out_two used once
loop_three 00000204

Symbol: loop_three
   Definitions
      At line 418 in file startup_LPC17xx.s
   Uses
      At line 426 in file startup_LPC17xx.s
Comment: loop_three used once
loop_two 000001E6

Symbol: loop_two
   Definitions
      At line 401 in file startup_LPC17xx.s
   Uses
      At line 406 in file startup_LPC17xx.s
Comment: loop_two used once
magicSquare 000001B6

Symbol: magicSquare
   Definitions
      At line 379 in file startup_LPC17xx.s
   Uses
      At line 174 in file startup_LPC17xx.s
Comment: magicSquare used once
matrix 00000014

Symbol: matrix
   Definitions
      At line 179 in file startup_LPC17xx.s
   Uses
      At line 170 in file startup_LPC17xx.s



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

Comment: matrix used once
mySMUAD 00000148

Symbol: mySMUAD
   Definitions
      At line 318 in file startup_LPC17xx.s
   Uses
      None
Comment: mySMUAD unused
mySMUSD 0000017E

Symbol: mySMUSD
   Definitions
      At line 348 in file startup_LPC17xx.s
   Uses
      None
Comment: mySMUSD unused
myUADD8 0000001D

Symbol: myUADD8
   Definitions
      At line 186 in file startup_LPC17xx.s
   Uses
      None
Comment: myUADD8 unused
myUSAD8 000000B6

Symbol: myUSAD8
   Definitions
      At line 250 in file startup_LPC17xx.s
   Uses
      None
Comment: myUSAD8 unused
stop 00000012

Symbol: stop
   Definitions
      At line 177 in file startup_LPC17xx.s
   Uses
      At line 177 in file startup_LPC17xx.s
Comment: stop used once
65 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file startup_LPC17xx.s
   Uses
      At line 46 in file startup_LPC17xx.s
      At line 659 in file startup_LPC17xx.s

N 00000003

Symbol: N
   Definitions
      At line 127 in file startup_LPC17xx.s
   Uses
      At line 171 in file startup_LPC17xx.s
Comment: N used once
N_sq 00000009

Symbol: N_sq
   Definitions
      At line 128 in file startup_LPC17xx.s
   Uses
      At line 131 in file startup_LPC17xx.s
Comment: N_sq used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file startup_LPC17xx.s
   Uses
      At line 34 in file startup_LPC17xx.s
      At line 658 in file startup_LPC17xx.s

myArea_size 00000018

Symbol: myArea_size
   Definitions
      At line 120 in file startup_LPC17xx.s
   Uses
      At line 123 in file startup_LPC17xx.s
Comment: myArea_size used once
5 symbols
424 symbols in table
